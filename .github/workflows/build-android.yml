name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-11-jdk wget
        sudo apt-get install -y autoconf automake libtool pkg-config cmake
        sudo apt-get install -y build-essential ccache libffi-dev libssl-dev
        sudo apt-get install -y libpng-dev libjpeg-dev zlib1g-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython kivy

    - name: Setup Android SDK
      run: |
        # Set up Android SDK environment
        export ANDROID_HOME="$HOME/android-sdk"
        export ANDROID_SDK_ROOT="$ANDROID_HOME"
        mkdir -p $ANDROID_HOME
        
        # Download and setup Android command line tools
        cd $ANDROID_HOME
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        rm commandlinetools-linux-8512546_latest.zip
        
        # Add to PATH
        export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"
        
        # Accept licenses and install required components
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "build-tools;36.0.0"
        
        # Accept licenses again after installation
        yes | sdkmanager --licenses || true
        
        # Download Android NDK
        wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q android-ndk-r25b-linux.zip
        export ANDROID_NDK_HOME="$ANDROID_HOME/android-ndk-r25b"
        
        # Save environment for next steps
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV  
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/android-ndk-r25b" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

    - name: Verify Android SDK installation
      run: |
        echo "Checking Android SDK installation..."
        ls -la $ANDROID_HOME/
        echo "Build-tools versions:"
        ls -la $ANDROID_HOME/build-tools/ || echo "No build-tools directory found"
        echo "Available packages:"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed

    - name: Build APK with Buildozer
      run: |
        # Set Java environment
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        
        # Set Android environment for buildozer
        export ANDROIDAPI="30"
        export ANDROIDMINAPI="21"
        export ANDROIDNDK="$ANDROID_NDK_HOME"
        export ANDROIDSDKROOT="$ANDROID_HOME"
        
        # Copy mobile game as main.py
        cp supertuxkart_mobile.py main.py
        
        # Create buildozer directory structure and link SDK
        mkdir -p .buildozer/android/platform
        ln -sf $ANDROID_HOME .buildozer/android/platform/android-sdk
        ln -sf $ANDROID_NDK_HOME .buildozer/android/platform/android-ndk-r25b
        
        # Build debug APK with verbose output
        buildozer --verbose android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: supertuxkart-mobile-apk
        path: bin/*.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: SuperTuxKart Mobile v1.0.${{ github.run_number }}
        files: bin/*.apk
        body: |
          SuperTuxKart Mobile - Android APK
          
          üèéÔ∏è **Features:**
          - 3-phase gameplay: Speed Circuit ‚Üí Arena Battle ‚Üí Final Showdown
          - Touch controls optimized for mobile
          - 6 powerup types with authentic physics
          - 5-8 minute gaming sessions perfect for ads
          
          üì± **Installation:**
          1. Download APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install and enjoy!
        draft: false
        prerelease: false